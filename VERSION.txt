Advanced Tiled Loader
--------------------------------------------------------------------------------------

CHANGES:

0.11.0 (09/04/12)
- Renamed Map.drawList to Map.layerOrder.
- Renamed Map.drawPosition to Map.layerPosition.
- Combined Map.tileLayers and Map.objectLayers into one table - Map.layers.
- The functionality of tileData is now combined with TileLayer.
- Changed Map.__call to return layers by their name.
- Created Map.callback() to forward love callbacks to layers.
- Created Map.swapLayers()
- Created Map.newCustomLayers() which is a new interface for creating custom layers.
- Classes now remember their class name.
- Removed object movement functions to deter the use of objects other than reading data from.
- Removed the fixPO2 option for the loader.
- Generally cleaned up the code and made it easier to read.
- Properties are now automatically converted into proper types (numbers, boolean, string) when loaded.
- Readme file changed. There is now a new VERSION.txt file for version information.


0.10.2 (04/26/12)
- Relative paths now fully work. Before, ATL did not like to travel backwards in 
	a directory from a map file to reach a tileset.

0.10.1 (04/20/12)
- Added quit compatibility for love 0.8.0 in the example files
- AdvTiledLoader can now be correctly required from any subfolder
- Fixed a bug with map.drawObjects not working
- Undefined object colors will now appear grey instead of black
- Added Loader.drawObjects and Loader.useSpriteBatch values. These values will be 
	applied to any new map that is loaded.
- Fixed a bug where the map would be drawn incorrectly if the map's width and height 
	were different

0.10.0 (04/11/12)
- 2d arrays are replaced with a much easier to use grid class.
- Tiles are now directly inserted into TileLayer.tileData. You no longer have to 
	look them up via their ID in Map.tiles.
- Tile indexes are now the same as their coordinants as shown inside the Tiled.
- Added support for Tiled version 0.8.0. This includes tile rotation, polygon 
	objects, polyline objects, tilemap offset, and tilemap propterties.
- Moved the object drawing code from object layers to the objects themselves.
- Added functions tileCopy(), tilePaste(), tileRotate(), tileFlipX(), tileFlipY() 
	to TileLayers.

0.9.0 (8/22/11)
- Advanced Tile Loader now has a wiki page and a github repository!
- Cleaned up the code quite a bit.
- Classes are now broken up into individual files rather than grouping similar 
	ones into one file.
- Many identifiers have been changed to be less confusing and more consistent. Now 
	camelCase is used to separate words instead of underscores. Internal 
	functions and data are now prefixed with an underscore.
- Sprite batch mode can now be set through the map or through individual tile 
	layers. Tile layer settings take precedence.
- A bug with layer transparency has been fixed.
- Tile:draw() now accepts parameters for scaling, rotation, and offset.
- TileLayer:drawAfterTile() now works with multiple functions
- Forcing a redraw is now automatic when you switch sprite batch modes.
- Added support for flipped tiles that were introduced in Tiled version 0.7.1

0.8.2 (5/9/11):
- Tileset images are now cached between maps.
- Added an option to automatically pad images for PO2. To do this set 
	Loader.fix_po2 to true.
- Changed Map.tl and Map.ol back to their old names. Map.tl and Map.ol remain as 
	aliases.
- Tile layers can now render using sprite batches by setting TileLayer.use_batch 
	to true.
- Added an init.lua file.
- Removed hardcoded require() paths. Added in global TILED_LOADER_PATH to point 
	to the library path.
- Renamed the TileSet functions getWidth() and getHeight() to tilesWide() and 
	tilesHigh().

0.8.1 (3/10/11):
- Renamed Map.tilelayers and Map.objectlayers to Map.tl and Map.ol respectively.
- Added function Tile.drawAfterTile()
- You may now define a draw() function for objects which overrides the default 
	drawing routine

0.8.0 (2/28/11):
- Initial release


For more information see here:
http://love2d.org/forums/viewtopic.php?f=5&t=2567

--------------------------------------------------------------------------------------


All images and code is subject to the following license unless otherwise stated:


Copyright (c) 2011-2012 Casey Baxter

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

Except as contained in this notice, the name(s) of the above copyright holders
shall not be used in advertising or otherwise to promote the sale, use or
other dealings in this Software without prior written authorization.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.